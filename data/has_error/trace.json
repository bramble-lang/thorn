[{"stage": "lexer", "source": [0, 2], "ok": "Keyword"},
{"stage": "lexer", "source": [3, 10], "ok": "Identifier"},
{"stage": "lexer", "source": [10, 11], "ok": "Operator"},
{"stage": "lexer", "source": [11, 12], "ok": "Operator"},
{"stage": "lexer", "source": [13, 15], "ok": "Operator"},
{"stage": "lexer", "source": [16, 19], "ok": "Primitive"},
{"stage": "lexer", "source": [20, 21], "ok": "Operator"},
{"stage": "lexer", "source": [26, 29], "ok": "Keyword"},
{"stage": "lexer", "source": [30, 31], "ok": "Identifier"},
{"stage": "lexer", "source": [31, 32], "ok": "Operator"},
{"stage": "lexer", "source": [32, 35], "ok": "Primitive"},
{"stage": "lexer", "source": [36, 38], "ok": "Operator"},
{"stage": "lexer", "source": [39, 40], "ok": "Integer"},
{"stage": "lexer", "source": [40, 41], "ok": "Operator"},
{"stage": "lexer", "source": [46, 53], "ok": "Keyword"},
{"stage": "lexer", "source": [53, 55], "ok": "Operator"},
{"stage": "lexer", "source": [55, 58], "ok": "Identifier"},
{"stage": "lexer", "source": [58, 60], "ok": "Operator"},
{"stage": "lexer", "source": [60, 62], "ok": "Identifier"},
{"stage": "lexer", "source": [62, 64], "ok": "Operator"},
{"stage": "lexer", "source": [64, 74], "ok": "Identifier"},
{"stage": "lexer", "source": [74, 75], "ok": "Operator"},
{"stage": "lexer", "source": [75, 76], "ok": "Identifier"},
{"stage": "lexer", "source": [76, 77], "ok": "Operator"},
{"stage": "lexer", "source": [77, 78], "ok": "Operator"},
{"stage": "lexer", "source": [84, 87], "ok": "Keyword"},
{"stage": "lexer", "source": [88, 89], "ok": "Identifier"},
{"stage": "lexer", "source": [89, 90], "ok": "Operator"},
{"stage": "lexer", "source": [90, 94], "ok": "Primitive"},
{"stage": "lexer", "source": [95, 97], "ok": "Operator"},
{"stage": "lexer", "source": [98, 102], "ok": "Keyword"},
{"stage": "lexer", "source": [102, 104], "ok": "Operator"},
{"stage": "lexer", "source": [104, 110], "ok": "Identifier"},
{"stage": "lexer", "source": [110, 112], "ok": "Operator"},
{"stage": "lexer", "source": [112, 119], "ok": "Identifier"},
{"stage": "lexer", "source": [119, 120], "ok": "Operator"},
{"stage": "lexer", "source": [120, 121], "ok": "Operator"},
{"stage": "lexer", "source": [121, 122], "ok": "Operator"},
{"stage": "lexer", "source": [127, 134], "ok": "Keyword"},
{"stage": "lexer", "source": [134, 136], "ok": "Operator"},
{"stage": "lexer", "source": [136, 139], "ok": "Identifier"},
{"stage": "lexer", "source": [139, 141], "ok": "Operator"},
{"stage": "lexer", "source": [141, 143], "ok": "Identifier"},
{"stage": "lexer", "source": [143, 145], "ok": "Operator"},
{"stage": "lexer", "source": [145, 156], "ok": "Identifier"},
{"stage": "lexer", "source": [156, 157], "ok": "Operator"},
{"stage": "lexer", "source": [157, 158], "ok": "Identifier"},
{"stage": "lexer", "source": [158, 159], "ok": "Operator"},
{"stage": "lexer", "source": [159, 160], "ok": "Operator"},
{"stage": "lexer", "source": [165, 171], "ok": "Keyword"},
{"stage": "lexer", "source": [172, 173], "ok": "Integer"},
{"stage": "lexer", "source": [173, 174], "ok": "Operator"},
{"stage": "lexer", "source": [175, 176], "ok": "Operator"},
{"stage": "lexer", "source": [176, 178], "ok": "Keyword"},
{"stage": "lexer", "source": [179, 186], "ok": "Identifier"},
{"stage": "lexer", "source": [186, 187], "ok": "Operator"},
{"stage": "lexer", "source": [187, 188], "ok": "Operator"},
{"stage": "lexer", "source": [189, 191], "ok": "Operator"},
{"stage": "lexer", "source": [192, 196], "ok": "Primitive"},
{"stage": "lexer", "source": [197, 198], "ok": "Operator"},
{"stage": "lexer", "source": [203, 206], "ok": "Keyword"},
{"stage": "lexer", "source": [207, 208], "ok": "Identifier"},
{"stage": "lexer", "source": [208, 209], "ok": "Operator"},
{"stage": "lexer", "source": [209, 213], "ok": "Primitive"},
{"stage": "lexer", "source": [214, 216], "ok": "Operator"},
{"stage": "lexer", "source": [217, 223], "ok": "Identifier"},
{"stage": "lexer", "source": [223, 224], "ok": "Operator"},
{"stage": "lexer", "source": [224, 228], "ok": "Boolean"},
{"stage": "lexer", "source": [228, 229], "ok": "Operator"},
{"stage": "lexer", "source": [230, 232], "ok": "Operator"},
{"stage": "lexer", "source": [233, 239], "ok": "Identifier"},
{"stage": "lexer", "source": [239, 240], "ok": "Operator"},
{"stage": "lexer", "source": [240, 245], "ok": "Boolean"},
{"stage": "lexer", "source": [245, 246], "ok": "Operator"},
{"stage": "lexer", "source": [246, 247], "ok": "Operator"},
{"stage": "lexer", "source": [252, 258], "ok": "Keyword"},
{"stage": "lexer", "source": [259, 261], "ok": "Identifier"},
{"stage": "lexer", "source": [261, 262], "ok": "Operator"},
{"stage": "lexer", "source": [263, 264], "ok": "Operator"},
{"stage": "lexer", "source": [266, 268], "ok": "Keyword"},
{"stage": "lexer", "source": [269, 275], "ok": "Identifier"},
{"stage": "lexer", "source": [275, 276], "ok": "Operator"},
{"stage": "lexer", "source": [276, 277], "ok": "Identifier"},
{"stage": "lexer", "source": [277, 278], "ok": "Operator"},
{"stage": "lexer", "source": [279, 283], "ok": "Primitive"},
{"stage": "lexer", "source": [283, 284], "ok": "Operator"},
{"stage": "lexer", "source": [285, 287], "ok": "Operator"},
{"stage": "lexer", "source": [288, 292], "ok": "Primitive"},
{"stage": "lexer", "source": [293, 294], "ok": "Operator"},
{"stage": "lexer", "source": [299, 305], "ok": "Keyword"},
{"stage": "lexer", "source": [306, 307], "ok": "Operator"},
{"stage": "lexer", "source": [307, 308], "ok": "Identifier"},
{"stage": "lexer", "source": [308, 309], "ok": "Operator"},
{"stage": "lexer", "source": [310, 311], "ok": "Operator"},
{"stage": "parser", "source": [16, 19], "ok": "Primitive Type"},
{"stage": "parser", "source": [0, 19], "ok": "Routine Declaration"},
{"stage": "parser", "source": [32, 35], "ok": "Primitive Type"},
{"stage": "parser", "source": [30, 35], "ok": "Identifier Declaration"},
{"stage": "parser", "source": [39, 40], "ok": "Number"},
{"stage": "parser", "source": [26, 40], "ok": "Let Binding"},
{"stage": "parser", "source": [26, 41], "ok": "Statement Bind"},
{"stage": "parser", "source": [46, 74], "ok": "Path"},
{"stage": "parser", "source": [75, 76], "ok": "Path"},
{"stage": "parser", "source": [75, 76], "ok": "Identifier"},
{"stage": "parser", "source": [46, 77], "ok": "Routine Call"},
{"stage": "parser", "source": [46, 78], "ok": "Statement Expression"},
{"stage": "parser", "source": [90, 94], "ok": "Primitive Type"},
{"stage": "parser", "source": [88, 94], "ok": "Identifier Declaration"},
{"stage": "parser", "source": [98, 119], "ok": "Path"},
{"stage": "parser", "source": [98, 121], "ok": "Routine Call"},
{"stage": "parser", "source": [84, 121], "ok": "Let Binding"},
{"stage": "parser", "source": [84, 122], "ok": "Statement Bind"},
{"stage": "parser", "source": [127, 156], "ok": "Path"},
{"stage": "parser", "source": [157, 158], "ok": "Path"},
{"stage": "parser", "source": [157, 158], "ok": "Identifier"},
{"stage": "parser", "source": [127, 159], "ok": "Routine Call"},
{"stage": "parser", "source": [127, 160], "ok": "Statement Expression"},
{"stage": "parser", "source": [172, 173], "ok": "Number"},
{"stage": "parser", "source": [165, 173], "ok": "Return"},
{"stage": "parser", "source": [0, 176], "ok": "Function Definition"},
{"stage": "parser", "source": [0, 176], "ok": "File Module"},
{"stage": "parser", "source": [192, 196], "ok": "Primitive Type"},
{"stage": "parser", "source": [176, 196], "ok": "Routine Declaration"},
{"stage": "parser", "source": [209, 213], "ok": "Primitive Type"},
{"stage": "parser", "source": [207, 213], "ok": "Identifier Declaration"},
{"stage": "parser", "source": [217, 223], "ok": "Path"},
{"stage": "parser", "source": [224, 228], "ok": "Boolean"},
{"stage": "parser", "source": [217, 229], "ok": "Routine Call"},
{"stage": "parser", "source": [233, 239], "ok": "Path"},
{"stage": "parser", "source": [240, 245], "ok": "Boolean"},
{"stage": "parser", "source": [233, 246], "ok": "Routine Call"},
{"stage": "parser", "source": [217, 246], "ok": "||"},
{"stage": "parser", "source": [203, 246], "ok": "Let Binding"},
{"stage": "parser", "source": [203, 247], "ok": "Statement Bind"},
{"stage": "parser", "source": [259, 261], "ok": "Path"},
{"stage": "parser", "source": [259, 261], "ok": "Identifier"},
{"stage": "parser", "source": [252, 261], "ok": "Return"},
{"stage": "parser", "source": [176, 264], "ok": "Function Definition"},
{"stage": "parser", "source": [279, 283], "ok": "Primitive Type"},
{"stage": "parser", "source": [276, 283], "ok": "Identifier Declaration"},
{"stage": "parser", "source": [288, 292], "ok": "Primitive Type"},
{"stage": "parser", "source": [266, 292], "ok": "Routine Declaration"},
{"stage": "parser", "source": [307, 308], "ok": "Path"},
{"stage": "parser", "source": [307, 308], "ok": "Identifier"},
{"stage": "parser", "source": [306, 308], "ok": "Boolean Negate"},
{"stage": "parser", "source": [299, 308], "ok": "Return"},
{"stage": "parser", "source": [266, 311], "ok": "Function Definition"},
{"stage": "parser", "source": [176, 311], "ok": "File Module"},
{"stage": "canonize-item-path", "source": [0, 311], "ok": "$basic::basic"},
{"stage": "canonize-item-path", "source": [0, 176], "ok": "$basic::main::main"},
{"stage": "canonize-item-path", "source": [0, 176], "ok": "$basic::main::my_main"},
{"stage": "canonize-item-path", "source": [176, 311], "ok": "$basic::second::second"},
{"stage": "canonize-item-path", "source": [176, 264], "ok": "$basic::second::my_bool"},
{"stage": "canonize-item-path", "source": [266, 311], "ok": "$basic::second::notter"},
{"stage": "canonize-item-path", "source": [276, 283], "ok": "$basic::second::b"},
{"stage": "canonize-type-ref", "source": [98, 121], "ok": "$basic::second::my_bool"},
{"stage": "canonize-type-ref", "source": [217, 229], "ok": "$basic::second::notter"},
{"stage": "canonize-type-ref", "source": [233, 246], "ok": "$basic::second::notter"},
{"stage": "type-resolver", "source": [39, 40], "ok": "i64"},
{"stage": "type-resolver", "source": [26, 41], "ok": "i64"},
{"stage": "type-resolver", "source": [75, 76], "ok": "i64", "ref": [26, 41]},
{"stage": "type-resolver", "source": [46, 78], "ok": "Unit"},
{"stage": "type-resolver", "source": [98, 121], "ok": "bool", "ref": [176, 264]},
{"stage": "type-resolver", "source": [84, 122], "ok": "bool"},
{"stage": "type-resolver", "source": [157, 158], "ok": "bool", "ref": [84, 122]},
{"stage": "type-resolver", "source": [127, 160], "ok": "Unit"},
{"stage": "type-resolver", "source": [172, 173], "ok": "i64"},
{"stage": "type-resolver", "source": [165, 173], "ok": "i64"},
{"stage": "type-resolver", "source": [0, 176], "ok": "i64"},
{"stage": "type-resolver", "source": [224, 228], "ok": "bool"},
{"stage": "type-resolver", "source": [217, 229], "ok": "bool", "ref": [266, 311]},
{"stage": "type-resolver", "source": [240, 245], "ok": "bool"},
{"stage": "type-resolver", "source": [233, 246], "ok": "bool", "ref": [266, 311]},
{"stage": "type-resolver", "source": [217, 246], "ok": "bool"},
{"stage": "type-resolver", "source": [203, 247], "ok": "bool"},
{"stage": "type-resolver", "source": [259, 261], "error": "CompilerError { span: Span { low: Offset(259), high: Offset(261) }, inner: NotDefined(StringId(31)) }"}]