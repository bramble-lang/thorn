[{"id": 1, "stage": "lexer", "source": [0, 2], "ok": "Keyword"},
{"id": 2, "stage": "lexer", "source": [3, 10], "ok": "Identifier"},
{"id": 3, "stage": "lexer", "source": [10, 11], "ok": "Operator"},
{"id": 4, "stage": "lexer", "source": [11, 12], "ok": "Operator"},
{"id": 5, "stage": "lexer", "source": [13, 15], "ok": "Operator"},
{"id": 6, "stage": "lexer", "source": [16, 19], "ok": "Primitive"},
{"id": 7, "stage": "lexer", "source": [20, 21], "ok": "Operator"},
{"id": 8, "stage": "lexer", "source": [26, 29], "ok": "Keyword"},
{"id": 9, "stage": "lexer", "source": [30, 31], "ok": "Identifier"},
{"id": 10, "stage": "lexer", "source": [31, 32], "ok": "Operator"},
{"id": 11, "stage": "lexer", "source": [32, 35], "ok": "Primitive"},
{"id": 12, "stage": "lexer", "source": [36, 38], "ok": "Operator"},
{"id": 13, "stage": "lexer", "source": [39, 40], "ok": "Integer"},
{"id": 14, "stage": "lexer", "source": [40, 41], "ok": "Operator"},
{"id": 15, "stage": "lexer", "source": [46, 53], "ok": "Keyword"},
{"id": 16, "stage": "lexer", "source": [53, 55], "ok": "Operator"},
{"id": 17, "stage": "lexer", "source": [55, 58], "ok": "Identifier"},
{"id": 18, "stage": "lexer", "source": [58, 60], "ok": "Operator"},
{"id": 19, "stage": "lexer", "source": [60, 62], "ok": "Identifier"},
{"id": 20, "stage": "lexer", "source": [62, 64], "ok": "Operator"},
{"id": 21, "stage": "lexer", "source": [64, 74], "ok": "Identifier"},
{"id": 22, "stage": "lexer", "source": [74, 75], "ok": "Operator"},
{"id": 23, "stage": "lexer", "source": [75, 76], "ok": "Identifier"},
{"id": 24, "stage": "lexer", "source": [76, 77], "ok": "Operator"},
{"id": 25, "stage": "lexer", "source": [77, 78], "ok": "Operator"},
{"id": 26, "stage": "lexer", "source": [84, 87], "ok": "Keyword"},
{"id": 27, "stage": "lexer", "source": [88, 89], "ok": "Identifier"},
{"id": 28, "stage": "lexer", "source": [89, 90], "ok": "Operator"},
{"id": 29, "stage": "lexer", "source": [90, 94], "ok": "Primitive"},
{"id": 30, "stage": "lexer", "source": [95, 97], "ok": "Operator"},
{"id": 31, "stage": "lexer", "source": [98, 102], "ok": "Keyword"},
{"id": 32, "stage": "lexer", "source": [102, 104], "ok": "Operator"},
{"id": 33, "stage": "lexer", "source": [104, 110], "ok": "Identifier"},
{"id": 34, "stage": "lexer", "source": [110, 112], "ok": "Operator"},
{"id": 35, "stage": "lexer", "source": [112, 119], "ok": "Identifier"},
{"id": 36, "stage": "lexer", "source": [119, 120], "ok": "Operator"},
{"id": 37, "stage": "lexer", "source": [120, 121], "ok": "Operator"},
{"id": 38, "stage": "lexer", "source": [121, 122], "ok": "Operator"},
{"id": 39, "stage": "lexer", "source": [127, 134], "ok": "Keyword"},
{"id": 40, "stage": "lexer", "source": [134, 136], "ok": "Operator"},
{"id": 41, "stage": "lexer", "source": [136, 139], "ok": "Identifier"},
{"id": 42, "stage": "lexer", "source": [139, 141], "ok": "Operator"},
{"id": 43, "stage": "lexer", "source": [141, 143], "ok": "Identifier"},
{"id": 44, "stage": "lexer", "source": [143, 145], "ok": "Operator"},
{"id": 45, "stage": "lexer", "source": [145, 156], "ok": "Identifier"},
{"id": 46, "stage": "lexer", "source": [156, 157], "ok": "Operator"},
{"id": 47, "stage": "lexer", "source": [157, 158], "ok": "Identifier"},
{"id": 48, "stage": "lexer", "source": [158, 159], "ok": "Operator"},
{"id": 49, "stage": "lexer", "source": [159, 160], "ok": "Operator"},
{"id": 50, "stage": "lexer", "source": [165, 171], "ok": "Keyword"},
{"id": 51, "stage": "lexer", "source": [172, 173], "ok": "Integer"},
{"id": 52, "stage": "lexer", "source": [173, 174], "ok": "Operator"},
{"id": 53, "stage": "lexer", "source": [175, 176], "ok": "Operator"},
{"id": 54, "stage": "lexer", "source": [176, 178], "ok": "Keyword"},
{"id": 55, "stage": "lexer", "source": [179, 186], "ok": "Identifier"},
{"id": 56, "stage": "lexer", "source": [186, 187], "ok": "Operator"},
{"id": 57, "stage": "lexer", "source": [187, 188], "ok": "Operator"},
{"id": 58, "stage": "lexer", "source": [189, 191], "ok": "Operator"},
{"id": 59, "stage": "lexer", "source": [192, 196], "ok": "Primitive"},
{"id": 60, "stage": "lexer", "source": [197, 198], "ok": "Operator"},
{"id": 61, "stage": "lexer", "source": [203, 206], "ok": "Keyword"},
{"id": 62, "stage": "lexer", "source": [207, 208], "ok": "Identifier"},
{"id": 63, "stage": "lexer", "source": [208, 209], "ok": "Operator"},
{"id": 64, "stage": "lexer", "source": [209, 213], "ok": "Primitive"},
{"id": 65, "stage": "lexer", "source": [214, 216], "ok": "Operator"},
{"id": 66, "stage": "lexer", "source": [217, 223], "ok": "Identifier"},
{"id": 67, "stage": "lexer", "source": [223, 224], "ok": "Operator"},
{"id": 68, "stage": "lexer", "source": [224, 228], "ok": "Boolean"},
{"id": 69, "stage": "lexer", "source": [228, 229], "ok": "Operator"},
{"id": 70, "stage": "lexer", "source": [230, 232], "ok": "Operator"},
{"id": 71, "stage": "lexer", "source": [233, 239], "ok": "Identifier"},
{"id": 72, "stage": "lexer", "source": [239, 240], "ok": "Operator"},
{"id": 73, "stage": "lexer", "source": [240, 245], "ok": "Boolean"},
{"id": 74, "stage": "lexer", "source": [245, 246], "ok": "Operator"},
{"id": 75, "stage": "lexer", "source": [246, 247], "ok": "Operator"},
{"id": 76, "stage": "lexer", "source": [252, 258], "ok": "Keyword"},
{"id": 77, "stage": "lexer", "source": [259, 260], "ok": "Identifier"},
{"id": 78, "stage": "lexer", "source": [260, 261], "ok": "Operator"},
{"id": 79, "stage": "lexer", "source": [262, 263], "ok": "Operator"},
{"id": 80, "stage": "lexer", "source": [265, 267], "ok": "Keyword"},
{"id": 81, "stage": "lexer", "source": [268, 274], "ok": "Identifier"},
{"id": 82, "stage": "lexer", "source": [274, 275], "ok": "Operator"},
{"id": 83, "stage": "lexer", "source": [275, 276], "ok": "Identifier"},
{"id": 84, "stage": "lexer", "source": [276, 277], "ok": "Operator"},
{"id": 85, "stage": "lexer", "source": [278, 282], "ok": "Primitive"},
{"id": 86, "stage": "lexer", "source": [282, 283], "ok": "Operator"},
{"id": 87, "stage": "lexer", "source": [284, 286], "ok": "Operator"},
{"id": 88, "stage": "lexer", "source": [287, 291], "ok": "Primitive"},
{"id": 89, "stage": "lexer", "source": [292, 293], "ok": "Operator"},
{"id": 90, "stage": "lexer", "source": [298, 304], "ok": "Keyword"},
{"id": 91, "stage": "lexer", "source": [305, 306], "ok": "Operator"},
{"id": 92, "stage": "lexer", "source": [306, 310], "ok": "Boolean"},
{"id": 93, "stage": "lexer", "source": [310, 311], "ok": "Operator"},
{"id": 94, "stage": "lexer", "source": [312, 313], "ok": "Operator"},
{"id": 95, "stage": "parser", "source": [16, 19], "ok": "Primitive Type"},
{"id": 96, "stage": "parser", "source": [0, 19], "ok": "Routine Declaration"},
{"id": 97, "stage": "parser", "source": [32, 35], "ok": "Primitive Type"},
{"id": 98, "stage": "parser", "source": [30, 35], "ok": "Identifier Declaration"},
{"id": 99, "stage": "parser", "source": [39, 40], "ok": "Number"},
{"id": 100, "stage": "parser", "source": [26, 40], "ok": "Let Binding"},
{"id": 101, "stage": "parser", "source": [26, 41], "ok": "Statement Bind"},
{"id": 102, "stage": "parser", "source": [46, 74], "ok": "Path"},
{"id": 103, "stage": "parser", "source": [75, 76], "ok": "Path"},
{"id": 104, "stage": "parser", "source": [75, 76], "ok": "Identifier"},
{"id": 105, "stage": "parser", "source": [46, 77], "ok": "Routine Call"},
{"id": 106, "stage": "parser", "source": [46, 78], "ok": "Statement Expression"},
{"id": 107, "stage": "parser", "source": [90, 94], "ok": "Primitive Type"},
{"id": 108, "stage": "parser", "source": [88, 94], "ok": "Identifier Declaration"},
{"id": 109, "stage": "parser", "source": [98, 119], "ok": "Path"},
{"id": 110, "stage": "parser", "source": [98, 121], "ok": "Routine Call"},
{"id": 111, "stage": "parser", "source": [84, 121], "ok": "Let Binding"},
{"id": 112, "stage": "parser", "source": [84, 122], "ok": "Statement Bind"},
{"id": 113, "stage": "parser", "source": [127, 156], "ok": "Path"},
{"id": 114, "stage": "parser", "source": [157, 158], "ok": "Path"},
{"id": 115, "stage": "parser", "source": [157, 158], "ok": "Identifier"},
{"id": 116, "stage": "parser", "source": [127, 159], "ok": "Routine Call"},
{"id": 117, "stage": "parser", "source": [127, 160], "ok": "Statement Expression"},
{"id": 118, "stage": "parser", "source": [172, 173], "ok": "Number"},
{"id": 119, "stage": "parser", "source": [165, 173], "ok": "Return"},
{"id": 120, "stage": "parser", "source": [0, 176], "ok": "Function Definition"},
{"id": 121, "stage": "parser", "source": [0, 176], "ok": "File Module"},
{"id": 122, "stage": "parser", "source": [192, 196], "ok": "Primitive Type"},
{"id": 123, "stage": "parser", "source": [176, 196], "ok": "Routine Declaration"},
{"id": 124, "stage": "parser", "source": [209, 213], "ok": "Primitive Type"},
{"id": 125, "stage": "parser", "source": [207, 213], "ok": "Identifier Declaration"},
{"id": 126, "stage": "parser", "source": [217, 223], "ok": "Path"},
{"id": 127, "stage": "parser", "source": [224, 228], "ok": "Boolean"},
{"id": 128, "stage": "parser", "source": [217, 229], "ok": "Routine Call"},
{"id": 129, "stage": "parser", "source": [233, 239], "ok": "Path"},
{"id": 130, "stage": "parser", "source": [240, 245], "ok": "Boolean"},
{"id": 131, "stage": "parser", "source": [233, 246], "ok": "Routine Call"},
{"id": 132, "stage": "parser", "source": [217, 246], "ok": "||"},
{"id": 133, "stage": "parser", "source": [203, 246], "ok": "Let Binding"},
{"id": 134, "stage": "parser", "source": [203, 247], "ok": "Statement Bind"},
{"id": 135, "stage": "parser", "source": [259, 260], "ok": "Path"},
{"id": 136, "stage": "parser", "source": [259, 260], "ok": "Identifier"},
{"id": 137, "stage": "parser", "source": [252, 260], "ok": "Return"},
{"id": 138, "stage": "parser", "source": [176, 263], "ok": "Function Definition"},
{"id": 139, "stage": "parser", "source": [278, 282], "ok": "Primitive Type"},
{"id": 140, "stage": "parser", "source": [275, 282], "ok": "Identifier Declaration"},
{"id": 141, "stage": "parser", "source": [287, 291], "ok": "Primitive Type"},
{"id": 142, "stage": "parser", "source": [265, 291], "ok": "Routine Declaration"},
{"id": 143, "stage": "parser", "source": [306, 310], "ok": "Boolean"},
{"id": 144, "stage": "parser", "source": [305, 310], "ok": "Boolean Negate"},
{"id": 145, "stage": "parser", "source": [298, 310], "ok": "Return"},
{"id": 146, "stage": "parser", "source": [265, 313], "ok": "Function Definition"},
{"id": 147, "stage": "parser", "source": [176, 313], "ok": "File Module"},
{"id": 148, "stage": "canonize-item-path", "source": [0, 313], "ok": "$basic::basic"},
{"id": 149, "stage": "canonize-item-path", "source": [0, 176], "ok": "$basic::main::main"},
{"id": 150, "stage": "canonize-item-path", "source": [0, 176], "ok": "$basic::main::my_main"},
{"id": 151, "stage": "canonize-item-path", "source": [176, 313], "ok": "$basic::second::second"},
{"id": 152, "stage": "canonize-item-path", "source": [176, 263], "ok": "$basic::second::my_bool"},
{"id": 153, "stage": "canonize-item-path", "source": [265, 313], "ok": "$basic::second::notter"},
{"id": 154, "stage": "canonize-item-path", "source": [275, 282], "ok": "$basic::second::b"},
{"id": 155, "stage": "canonize-type-ref", "source": [98, 121], "ok": "$basic::second::my_bool"},
{"id": 156, "stage": "canonize-type-ref", "source": [217, 229], "ok": "$basic::second::notter"},
{"id": 157, "stage": "canonize-type-ref", "source": [233, 246], "ok": "$basic::second::notter"},
{"id": 158, "stage": "type-resolver", "source": [39, 40], "ok": "i64"},
{"id": 159, "stage": "type-resolver", "source": [26, 41], "ok": "i64"},
{"id": 160, "stage": "type-resolver", "source": [75, 76], "ok": "i64", "ref": [26, 41]},
{"id": 161, "stage": "type-resolver", "source": [46, 78], "ok": "Unit"},
{"id": 162, "stage": "type-resolver", "source": [98, 121], "ok": "bool", "ref": [176, 263]},
{"id": 163, "stage": "type-resolver", "source": [84, 122], "ok": "bool"},
{"id": 164, "stage": "type-resolver", "source": [157, 158], "ok": "bool", "ref": [84, 122]},
{"id": 165, "stage": "type-resolver", "source": [127, 160], "ok": "Unit"},
{"id": 166, "stage": "type-resolver", "source": [172, 173], "ok": "i64"},
{"id": 167, "stage": "type-resolver", "source": [165, 173], "ok": "i64"},
{"id": 168, "stage": "type-resolver", "source": [0, 176], "ok": "i64"},
{"id": 169, "stage": "type-resolver", "source": [224, 228], "ok": "bool"},
{"id": 170, "stage": "type-resolver", "source": [217, 229], "ok": "bool", "ref": [265, 313]},
{"id": 171, "stage": "type-resolver", "source": [240, 245], "ok": "bool"},
{"id": 172, "stage": "type-resolver", "source": [233, 246], "ok": "bool", "ref": [265, 313]},
{"id": 173, "stage": "type-resolver", "source": [217, 246], "ok": "bool"},
{"id": 174, "stage": "type-resolver", "source": [203, 247], "ok": "bool"},
{"id": 175, "stage": "type-resolver", "source": [259, 260], "ok": "bool", "ref": [203, 247]},
{"id": 176, "stage": "type-resolver", "source": [252, 260], "ok": "bool"},
{"id": 177, "stage": "type-resolver", "source": [176, 263], "ok": "bool"},
{"id": 178, "stage": "type-resolver", "source": [275, 282], "ok": "bool"},
{"id": 179, "stage": "type-resolver", "source": [306, 310], "ok": "bool"},
{"id": 180, "stage": "type-resolver", "source": [305, 310], "ok": "bool"},
{"id": 181, "stage": "type-resolver", "source": [298, 310], "ok": "bool"},
{"id": 182, "stage": "type-resolver", "source": [265, 313], "ok": "bool"},
{"id": 187, "parent_id": 186, "stage": "llvm", "source": [39, 40], "ok": "i64 5"},
{"id": 186, "parent_id": 185, "stage": "llvm", "source": [26, 41], "ok": "  %x = alloca i64, align 8"},
{"id": 185, "parent_id": 184, "stage": "llvm", "source": [26, 41], "ok": "  store i64 5, i64* %x, align 4"},
{"id": 184, "parent_id": 183, "stage": "llvm", "source": [26, 41], "ok": "  %x = alloca i64, align 8"},
{"id": 189, "parent_id": 188, "stage": "llvm", "source": [75, 76], "ok": "  %x1 = load i64, i64* %x, align 4"},
{"id": 188, "parent_id": 183, "stage": "llvm", "source": [46, 78], "ok": "  call void @std_io_writei64ln(i64 %x1)"},
{"id": 193, "parent_id": 192, "stage": "llvm", "source": [98, 121], "ok": "  %result = call i1 @basic_second_my_bool()"},
{"id": 192, "parent_id": 191, "stage": "llvm", "source": [84, 122], "ok": "  %b = alloca i1, align 1"},
{"id": 191, "parent_id": 190, "stage": "llvm", "source": [84, 122], "ok": "  store i1 %result, i1* %b, align 1"},
{"id": 190, "parent_id": 183, "stage": "llvm", "source": [84, 122], "ok": "  %b = alloca i1, align 1"},
{"id": 195, "parent_id": 194, "stage": "llvm", "source": [157, 158], "ok": "  %b2 = load i1, i1* %b, align 1"},
{"id": 194, "parent_id": 183, "stage": "llvm", "source": [127, 160], "ok": "  call void @std_io_writeboolln(i1 %b2)"},
{"id": 197, "parent_id": 196, "stage": "llvm", "source": [172, 173], "ok": "i64 0"},
{"id": 196, "parent_id": 183, "stage": "llvm", "source": [165, 173], "ok": "  ret i64 0"},
{"id": 183, "stage": "llvm", "source": [0, 176], "ok": "define i64 @basic_main_my_main() {\nentry:\n  %x = alloca i64, align 8\n  store i64 5, i64* %x, align 4\n  %x1 = load i64, i64* %x, align 4\n  call void @std_io_writei64ln(i64 %x1)\n  %b = alloca i1, align 1\n  %result = call i1 @basic_second_my_bool()\n  store i1 %result, i1* %b, align 1\n  %b2 = load i1, i1* %b, align 1\n  call void @std_io_writeboolln(i1 %b2)\n  ret i64 0\n}\n"},
{"id": 204, "parent_id": 203, "stage": "llvm", "source": [224, 228], "ok": "i1 true"},
{"id": 203, "parent_id": 202, "stage": "llvm", "source": [217, 229], "ok": "  %result = call i1 @basic_second_notter(i1 true)"},
{"id": 206, "parent_id": 205, "stage": "llvm", "source": [240, 245], "ok": "i1 false"},
{"id": 205, "parent_id": 202, "stage": "llvm", "source": [233, 246], "ok": "  %result1 = call i1 @basic_second_notter(i1 false)"},
{"id": 202, "parent_id": 201, "stage": "llvm", "source": [217, 246], "ok": "  %0 = or i1 %result, %result1"},
{"id": 201, "parent_id": 200, "stage": "llvm", "source": [203, 247], "ok": "  %b = alloca i1, align 1"},
{"id": 200, "parent_id": 199, "stage": "llvm", "source": [203, 247], "ok": "  store i1 %0, i1* %b, align 1"},
{"id": 199, "parent_id": 198, "stage": "llvm", "source": [203, 247], "ok": "  %b = alloca i1, align 1"},
{"id": 208, "parent_id": 207, "stage": "llvm", "source": [259, 260], "ok": "  %b2 = load i1, i1* %b, align 1"},
{"id": 207, "parent_id": 198, "stage": "llvm", "source": [252, 260], "ok": "  ret i1 %b2"},
{"id": 198, "stage": "llvm", "source": [176, 263], "ok": "define i1 @basic_second_my_bool() {\nentry:\n  %b = alloca i1, align 1\n  %result = call i1 @basic_second_notter(i1 true)\n  %result1 = call i1 @basic_second_notter(i1 false)\n  %0 = or i1 %result, %result1\n  store i1 %0, i1* %b, align 1\n  %b2 = load i1, i1* %b, align 1\n  ret i1 %b2\n}\n"},
{"id": 210, "parent_id": 209, "stage": "llvm", "source": [275, 282], "ok": "  %b = alloca i1, align 1"},
{"id": 211, "parent_id": 209, "stage": "llvm", "source": [275, 282], "ok": "  store i1 %0, i1* %b, align 1"},
{"id": 214, "parent_id": 213, "stage": "llvm", "source": [306, 310], "ok": "i1 true"},
{"id": 213, "parent_id": 212, "stage": "llvm", "source": [305, 310], "ok": "i1 false"},
{"id": 212, "parent_id": 209, "stage": "llvm", "source": [298, 310], "ok": "  ret i1 false"},
{"id": 209, "stage": "llvm", "source": [265, 313], "ok": "define i1 @basic_second_notter(i1 %0) {\nentry:\n  %b = alloca i1, align 1\n  store i1 %0, i1* %b, align 1\n  ret i1 false\n}\n"}]